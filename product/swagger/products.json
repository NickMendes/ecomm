{
  "openapi": "3.0.3",
  "info": {
    "description": "Semana 5 - Treinamento da PagoNxt com a Alura sobre HTTP e Swagger.",
    "version": "0.1.0",
    "title": "Ecomm Project - Products API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Marina",
      "email": "marina.mendes@pagonxt.com"
    },
    "license": {
      "name": "Licen√ßa",
      "url": "http://www.alura.com"
    }
  },
  "components": {
    "schemas": {
      "category-response": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Ativa",
              "Inativa"
            ]
          }
        }
      },
      "category-insert": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "Ativa"
          }
        }
      },
      "product-response": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "unit_price": {
            "type": "number",
            "format": "double"
          },
          "storage_qty": {
            "type": "integer"
          },
          "category_id": {
            "type": "string"
          }
        }
      },
      "product-insert": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "unit_price": {
            "type": "number",
            "format": "double"
          },
          "storage_qty": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Product Server - XD"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Search for all available categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/category-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier",
          "required": true,
          "example": "63caa785ae701b25441ff0be",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Search for category by ID",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/category-response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Category Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add a new category to the list. You need to be logged as an adminstrator to use this.",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/category-insert"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/categories/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier",
          "required": true,
          "example": "63caa785ae701b25441ff0be",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Change category by ID. You need to be logged as an adminstrator to use this.",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/category-insert"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Category Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Change category status by ID. You need to be logged as an adminstrator to use this.",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "Ativa",
                        "Inativa"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Category Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete category by ID. You need to be logged as an adminstrator to use this.",
        "responses": {
          "200": {
            "description": "Seccess",
            "content": {
              "aplication/json": {
                "example": "Category deleted"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Category Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search for all available products.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier",
          "required": true,
          "example": "63caa785ae701b25441ff0be",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search for product by ID",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/product-response"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Product Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a new product to the list. You need to be logged as an adminstrator to use this.",
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/product-insert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier",
          "required": true,
          "example": "63caa785ae701b25441ff0be",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Change all product information by ID. You need to be logged as an adminstrator to use this.",
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/product-insert"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/product-response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Product Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "NOT IMPLEMENTED - Change a product information by ID. You need to be logged as an adminstrator to use this.",
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/product-response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Product Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by ID. You need to be logged as an adminstrator to use this.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "example": "Product deleted"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "example": "User unathorized, please check your credentials"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Product Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/range": {
      "parameters": [
        {
          "name": "max_value",
          "in": "query",
          "description": "Maximum value price of Product",
          "required": true,
          "example": 100,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "min_value",
          "in": "query",
          "description": "Minimum value price of Product",
          "required": true,
          "example": 20,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "NOT IMPLEMENTED - Search for products in an especific price range.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{category}": {
      "parameters": [
        {
          "name": "category",
          "in": "path",
          "description": "Category of products you want to search",
          "required": true,
          "example": "Esporte",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "NOT IMPLEMENTED - Search for products of an especific category",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Category Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/storage": {
      "parameters": [
        {
          "name": "storage_qty",
          "in": "query",
          "description": "Minimum quantity of items on storage",
          "required": true,
          "example": 100,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "NOT IMPLEMENTED - Search for products with an especific quantity on storage.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/product-response"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "aplication/json": {
                "example": "Not Found"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}