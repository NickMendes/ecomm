openapi: 3.0.3

info:
  description: Treinamento da PagoNxt (Empresa Santander) com a Alura - Microserviço de Ecommerce, documentação dos produtos
  version: 0.2.0
  title: Ecomm Project - Products API
  termsOfService: http://swagger.io/terms/
  contact:
    name: Marina
    email: marina.mendes@pagonxt.com
  license:
    name: Licença
    url: http://www.alura.com

components:
  schemas:
    securitySchemes:
      JWTAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    category-response:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - Ativa
            - Inativa
    category-insert:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
          example: Ativa
    product-response:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        unit_price:
          type: integer
        storage_qty:
          type: integer
        category_id:
          type: string
    product-insert:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        unit_price:
          type: integer
        storage_qty:
          type: integer
        category_id:
          type: integer

servers:
  - url: http://localhost:3001/
    description: Product Server - XD

paths:
  /categories:
    get:
      tags:
        - Categories
      summary: Search for all available categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category-response'
        '401':
          description: Unathorized
          content:
            application/json:
              example: Token not found || Expired or invalid token
        '500':
          description: Internal Server Error

    post:
      tags:
        - Categories
      security:
        - JWTAuth: []
      summary:
        Add a new category to the list. You need to be logged as an adminstrator to use this.
      responses:
        '201':
          description: Created
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/category-insert'
        '401':
          description: Unathorized
          content:
            aplication/json:
              example: Token not found || Expired or invalid token
        '500':
          description: Internal Server Error
  
  /categories/{id}:
    parameters:
      - name: id
        in: path
        description: Unique identifier
        required: true
        example: 63caa785ae701b25441ff0be
        schema:
          type: string
    get:
      tags:
        - Categories
      summary: Search for category by ID
      responses:
        '200':
          description: Success
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/category-response'
        '401':
          description: Unathorized
          content:
            application/json:
              example: Token not found || Expired or invalid token
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Category Not Found
        '500':
          description: Internal Server Error

    put:
      tags:
        - Categories
      security:
        - JWTAuth: []
      summary:
        Change category by ID. You need to be logged as an adminstrator to use this.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: Token not found || Expired or invalid token
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Category Not Found
        '500':
          description: Internal Server Error

    patch:
      tags:
        - Categories
      security:
        - JWTAuth: []
      summary:
        Change category status by ID. You need to be logged as an adminstrator to use this.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: User unathorized, please check your credentials
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Category Not Found
        '500':
          description: Internal Server Error

    delete:
      tags:
        - Categories
      security:
        - JWTAuth: []
      summary:
        Delete category by ID. You need to be logged as an adminstrator to use this.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: User unathorized, please check your credentials
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Category Not Found
        '500':
          description: Internal Server Error

  /products:
    get:
      tags:
        - Products
      summary: Search for all available products.
      responses:
        '200':
          description: Success
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-response'
        '500':
          description: Internal Server Error

    post:
      tags:
        - Products
      security:
        - JWTAuth: []
      summary: Add a new product to the list. You need to be logged as an adminstrator to use this.
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/product-insert'
      responses:
        '200':
          description: Success
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product-response'
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Not Found
        '500':
          description: Internal Server Error

  /products/{id}:
    parameters:
      - name: id
        in: path
        description: Unique identifier
        required: true
        example: 63caa785ae701b25441ff0be
        schema:
          type: string
    get:
      tags:
        - Products
      summary: Search for product by ID
      responses:
        '200':
          description: Success
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/product-response'
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Product Not Found
        '500':
          description: Internal Server Error

    put:
      tags:
        - Products
      security:
        - JWTAuth: []
      summary: Change all product information by ID. You need to be logged as an adminstrator to use this.
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/product-insert'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: User unathorized, please check your credentials
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Product Not Found
        '500':
          description: Internal Server Error
    
    patch:
      tags:
        - Products
      security:
        - JWTAuth: []
      summary: NOT IMPLEMENTED - Change a product information by ID. You need to be logged as an adminstrator to use this.
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              type: object
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: User unathorized, please check your credentials
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Product Not Found
        '500':
          description: Internal Server Error

    delete:
      tags:
        - Products
      security:
        - JWTAuth: []
      summary: Delete product by ID. You need to be logged as an adminstrator to use this.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            aplication/json:
              example: User unathorized, please check your credentials
        '404':
          description: Not Found
          content:
            aplication/json:
              example: Product Not Found
        '500':
          description: Internal Server Error